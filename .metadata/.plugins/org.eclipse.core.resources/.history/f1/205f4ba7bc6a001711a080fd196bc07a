# $language = "python"
# $interface = "1.0"

# This automatically generated script may need to be
# edited in order to work correctly.
import time,os,datetime
#from ftplib import FTP
import ftplib

#crt.Screen.Synchronous = True
filePath = "/sdcard/test.txt"
repeatTime = 1
avgTime = 0
sum = 0
time1 = 0
manufactory = "fengxing"
reporter = "liujia"
localPath = "D:\\"

def ftpDownload(path):
	crt.Screen.Send("busybox ftpget -v -u Anonymous 172.17.3.101 /mnt/usb/" + "$(cat /data/aa)" + "/MstarUpgrade.bin " + path + chr(13))
	crt.Screen.WaitForString("ftpget: cmd QUIT (null)")
	crt.Screen.Send("date >> /mnt/usb/" + "$(cat /data/aa)" + "/versionHistory.txt" + chr(13))
	crt.Screen.Send("md5 MstarUpgrade.bin >> versionHistory.txt" + chr(13))
def wgetDownload(url):
	crt.Screen.Send("busybox wget -c -t 1000 " + url + chr(13))
	crt.Screen.WaitForString("MstarUpgrade-49U1-LS 100%" )#!!!!!!need to change by different version
	crt.Screen.Send("mv MstarUpgrade*.bin MstarUpgrade.bin" + chr(13))
	time.sleep(2)
	crt.Screen.Send("date >> /mnt/usb/" + "$(cat /data/aa)" + "/versionHistory.txt" + chr(13))#刷机完成进入系统的时间，开始进入刷机+OTA循环
	crt.Screen.Send("md5 MstarUpgrade.bin >> versionHistory.txt" + chr(13))

def readEachLine(localPath):
	custarVersion = ""
	if os.path.exists(localPath):
		file = localPath + "testVersionPath.txt"
		openFile = open(file,'r')
		lines = openFile.readlines()
		for line in lines:
			custarVersion = str(line).strip()
	return custarVersion

def ftpConnect():
	ftp_server = '172.17.3.101'
	port = 21
	cwd = 'lastest_package_G43F/'
	ftp = FTP()
	ftp.set_debuglevel(2)
	try:
		ftp.connect(ftp_server,port)
	except (socket.error,socket.gaierror):
		crt.Screen.Send("ftp connect error!!!!!!!" + chr(13))
		if os.path.exists(localPath):
			file = localPath + "pythonerror.txt"
			time = str(datetime.datetime.now().strftime("%Y-%m-%d"))
			openFile = open(file,'w')
			openFile.write("=======" + time + "======")
			openFile.write(ftp_server + "connect error!!")
			openFile.close()
			
		return
	try:
		ftp.login()
	except ftplib.error_perm:
		crt.Screen.Send("ftp login error!!!!!" + chr(13))
		if os.path.exists(localPath):
			file = localPath + "pythonerror.txt"
			time2 = str(datetime.datetime.now().strftime("%Y-%m-%d"))
			openFile = open(file,'w')
			openFile.write("=======" + time2 + "======")
			openFile.write("ftp login error!!")
			openFile.close()
		ftp.quit()
		return
	ftp.cwd(cwd)
	list = ftp.nlst()
	for name in list:
		crt.Screen.Send(name + chr(13))
	
ftpConnect()	
time.sleep(2)
for p in range(0,repeatTime):
	path = ""
	if os.path.exists(localPath):
		file = localPath + "custarVersion.txt"
		openFile = open(file,'r')
		lines = openFile.readlines()
		for line in lines:
			path = str(line).strip()
			crt.Screen.Send(path + chr(13))
			time.sleep(2)
			crt.Screen.Send("su" + chr(13))
			crt.Screen.Send("clear" + chr(13))
			crt.Screen.Send("cd /" + chr(13))
			crt.Screen.Send("ls /mnt/usb > /data/aa" + chr(13))
			time.sleep(2)
			crt.Screen.Send("cd /mnt/usb/" + "$(cat /data/aa)" + chr(13))
			crt.Screen.Send("rm -r MstarUpgrade*.bin" +chr(13))
			time.sleep(2)
			#ftpPath = "/Platform_Package/funtv_rel_build/MstarUpgrade-F49N-LSC490FN02-536D4905XU14_3.2.0.6_s.bin"
			ftpDownload(path)
			time.sleep(4)
			crt.Screen.Send(chr(3))
			crt.Screen.Send("reboot" + chr(13))
			crt.Screen.Send(chr(13))
			i = 1
			while i <20:
				crt.Screen.Send(chr(13)+chr(10))#long pess enter,chr(13) is enter,chr(10)is 换行
				time.sleep(0.2)
				i = i+1
			#crt.Screen.WaitForString("In:    serial" + chr(13) + chr(10) + "Out:   serial" + chr(13) + chr(10) + "Err:   serial" + chr(13) + chr(10) + "Net:   No ethernet found." + chr(13) + chr(10) + "MAC:  0x28: 0x76: 0xCD: 0x1:0x45: 0x3" + chr(13) + chr(10) + "#######################################################################" + chr(13) + chr(10) + "#######################################################################" + chr(13))
			crt.Screen.WaitForString("<< MStar >># ")
			crt.Screen.Send(chr(13))
			crt.Screen.Send("custar" + chr(13))
			crt.Screen.WaitForString("AC_ON")
			startTime = datetime.datetime.now()
			crt.Screen.WaitForString("[AN] [FUN] stopped : bootanim")#launcher成功进入标志位
			stopTime = datetime.datetime.now()
			time1 = float((stopTime - startTime).seconds) + float((stopTime - startTime).microseconds)/1000000
			sum = sum + time1
			time.sleep(60)#每次刷机后有10分钟的测试时间,如果不测试可以取消
			
avgTime = sum/repeatTime
date = str(datetime.datetime.now().strftime("%Y-%m-%d"))
crt.Screen.Send("echo '0' > /proc/sys/kernel/printk" + chr(13))
time.sleep(1)
crt.Screen.Send("echo '0' > /proc/sys/kernel/printk" + chr(13))
time.sleep(1)
crt.Screen.Send("clear" + chr(13))
time.sleep(1)
crt.Screen.Send("getprop | grep ro.build.version.incremental" + chr(13))
time.sleep(1)
'''
paras1 = crt.Screen.Get2(1, 0, 30, 50 )
rom_version = paras1[paras1.find("[ro.build.version.incremental]") + 30:]
rom_version = rom_version[rom_version.find("[") + 1:rom_version.find("]")]
'''
version = crt.Screen.Get2(1,0,30,50)
time.sleep(1)
#crt.Screen.Send(version + chr(13))
rom_version = version[version.find("[ro.build.version.incremental]") + 30:]
rom_version = rom_version[rom_version.find("[") + 1:rom_version.find("]")]
time.sleep(1)
crt.Screen.Send(str(rom_version) + chr(13))
time.sleep(1)
crt.Screen.Send("clear" + chr(13))
time.sleep(1)
crt.Screen.Send("getprop |grep ro.product.screen.artmodel" + chr(13))
time.sleep(1)
model =  crt.Screen.Get2(1,0,30,50)
screenModel = model[model.find("[ro.product.screen.artmodel]") + 30:]
screenModel = screenModel[screenModel.find("[") + 1:screenModel.find("]")]
crt.Screen.Send(str(screenModel) + chr(13))
time.sleep(1)
crt.Screen.Send("clear" + chr(13))
crt.Screen.Send("getprop |grep persist.sys.chiptype" + chr(13))
time.sleep(1)
platformBefore = crt.Screen.Get2(1,0,30,50)
time.sleep(1)
platform = platformBefore[platformBefore.find("[persist.sys.chiptype]") + 22:]
platform = platform[platform.find("[") + 1:platform.find("]")]
crt.Screen.Send(str(platform) + chr(13))
os.system("python dbOperate.py firstBootTime " + reporter + " " + str(avgTime) + " " + str(repeatTime) + " " + platform + " " + screenModel + " " + str(date) + " " + rom_version + " " +manufactory)
time.sleep(10)
